name: Distribute Release

on:
  release:
    types: [ published ]

jobs:
  version-check:
    name: Version Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: Check metREx Version
      run: |
        python -m pip install --upgrade pip
        pip install pypi-version
        pypi-version check
  
  publish-to-pypi:
    name: Publish to PyPi
    runs-on: ubuntu-latest
    needs: [version-check]
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: Install Build Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build
      run: python setup.py sdist
    - name: Publish to PyPi Test
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_TEST_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      run: twine upload --repository-url https://test.pypi.org/legacy/ dist/*
    - name: Publish to PyPi Prod
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
  
  publish-to-docker-hub:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [version-check]
    steps:
    - uses: actions/checkout@master
    - name: Get release version
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
    - name: Build and Publish Image
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: homedepottech/metrex
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: "latest,${{ env.RELEASE_VERSION }}"
